{"version":3,"file":"inviewport.min.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,wBAAyB,GAAIH,GACV,iBAAZC,QACdA,QAAQ,yBAA2BD,IAEnCD,EAAK,yBAA2BC,IARlC,CASGK,MAAM,WACT,M,gECEA,mBACEC,EACAC,EACAC,EACAC,GAEA,QAFA,IAAAA,IAAAA,EAAA,MAEI,yBAA0BC,QAAUJ,EAAS,CAC/C,IASMK,EAAwB,CAC5BZ,KATAU,GAAyBA,EAAsBV,KAC3CU,EAAsBV,KACtB,KAQJa,WANAH,GAAyBA,EAAsBG,WAC3CH,EAAsBG,WACtB,MAKJL,UACGM,MAAMC,QAAQP,IAAcA,EAAUQ,OAAS,GAC/CR,GAAa,GAAKA,GAAa,EAC5BA,EACA,IAMS,IAAIS,sBAAqB,SAACC,EAASC,GAClDD,EAAQE,SAAQ,SAACC,IACe,IAA1BA,EAAOC,gBAA2BD,EAAOE,kBAAoB,IAC3DT,MAAMC,QAAQN,IAChBA,EAAS,KACe,IAApBA,EAASO,QACXG,EAASK,UAAUH,EAAOI,SAG5BhB,MAI0B,IAA1BY,EAAOC,gBACLR,MAAMC,QAAQN,IAAoC,mBAAhBA,EAAS,IAC7CA,EAAS,UAIdG,GACMc,QAAQnB,M","sources":["webpack://javascript-inviewport/webpack/universalModuleDefinition","webpack://javascript-inviewport/./inviewport.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"javascript-inviewport\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"javascript-inviewport\"] = factory();\n\telse\n\t\troot[\"javascript-inviewport\"] = factory();\n})(self, function() {\nreturn ","/**\n * inViewport.\n *\n * @format\n */\n\ninterface OberverConfig {\n  root?: Element | null;\n  rootMargin?: string;\n  threshold?: number | number[];\n}\n\nexport default function inViewport(\n  element: HTMLElement,\n  threshold: number | number[],\n  callback: Function | Function[],\n  advancedConfiguration: OberverConfig | null = null\n): void {\n  if ('IntersectionObserver' in window && element) {\n    const safeRoot =\n      advancedConfiguration && advancedConfiguration.root\n        ? advancedConfiguration.root\n        : null;\n    const safeRootMargin =\n      advancedConfiguration && advancedConfiguration.rootMargin\n        ? advancedConfiguration.rootMargin\n        : '0px';\n\n    const config: OberverConfig = {\n      root: safeRoot,\n      rootMargin: safeRootMargin,\n      threshold:\n        (Array.isArray(threshold) && threshold.length > 0) ||\n        (threshold >= 0 && threshold <= 1)\n          ? threshold\n          : 0.5,\n    };\n\n    /**\n     * Observer.\n     */\n    const observer = new IntersectionObserver((entries, observer) => {\n      entries.forEach((change) => {\n        if (change.isIntersecting === true && change.intersectionRatio > 0) {\n          if (Array.isArray(callback)) {\n            callback[0]();\n            if (callback.length === 1) {\n              observer.unobserve(change.target);\n            }\n          } else {\n            callback();\n          }\n        }\n\n        if (change.isIntersecting === false) {\n          if (Array.isArray(callback) && typeof callback[1] === 'function') {\n            callback[1]();\n          }\n        }\n      });\n    }, config);\n    observer.observe(element);\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","self","element","threshold","callback","advancedConfiguration","window","config","rootMargin","Array","isArray","length","IntersectionObserver","entries","observer","forEach","change","isIntersecting","intersectionRatio","unobserve","target","observe"],"sourceRoot":""}